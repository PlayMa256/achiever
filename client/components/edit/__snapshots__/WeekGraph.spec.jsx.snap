// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WeekGraph render should render GaugeBars if props are correct 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WeekGraph
    controlDate={"2018-02-14T00:00:00.000Z"}
    dailyContractedHours="8:00"
    storedTimes={
      Array [
        Object {
          "hours": 7,
          "minutes": 0,
        },
        Object {
          "hours": 12,
          "minutes": 0,
        },
        Object {
          "hours": 0,
          "minutes": 0,
        },
        Object {
          "hours": 0,
          "minutes": 0,
        },
      ]
    }
    weekEntries={
      Object {
        "timeEntries": Array [
          Object {
            "__typename": "TimeEntry",
            "activity": "Code/ Document Reviews",
            "date": "2018-02-11",
            "endBreakTime": "12:35",
            "endTime": "18:28",
            "phase": "Project Phase Name",
            "startBreakTime": "11:35",
            "startTime": "9:28",
            "total": "8:00",
          },
          Object {
            "__typename": "TimeEntry",
            "activity": "Code/ Document Reviews",
            "date": "2018-02-12",
            "endBreakTime": "12:35",
            "endTime": "18:28",
            "phase": "Project Phase Name",
            "startBreakTime": "11:35",
            "startTime": "9:28",
            "total": "8:00",
          },
          Object {
            "__typename": "TimeEntry",
            "activity": "Code/ Document Reviews",
            "date": "2018-02-13",
            "endBreakTime": "12:35",
            "endTime": "18:28",
            "phase": "Project Phase Name",
            "startBreakTime": "11:35",
            "startTime": "9:28",
            "total": "8:00",
          },
          Object {
            "__typename": "TimeEntry",
            "activity": "Code/ Document Reviews",
            "date": "2018-02-14",
            "endBreakTime": "",
            "endTime": "",
            "phase": "Project Phase Name",
            "startBreakTime": "",
            "startTime": "",
            "total": "8:00",
          },
          Object {
            "__typename": "TimeEntry",
            "activity": "Code/ Document Reviews",
            "date": "2018-02-15",
            "endBreakTime": "12:35",
            "endTime": "18:28",
            "phase": "Project Phase Name",
            "startBreakTime": "11:35",
            "startTime": "9:28",
            "total": "8:00",
          },
          Object {
            "__typename": "TimeEntry",
            "activity": "Code/ Document Reviews",
            "date": "2018-02-16",
            "endBreakTime": "",
            "endTime": "18:28",
            "phase": "Project Phase Name",
            "startBreakTime": "",
            "startTime": "9:28",
            "total": "8:00",
          },
          Object {
            "__typename": "TimeEntry",
            "activity": "Code/ Document Reviews",
            "date": "2018-02-17",
            "endBreakTime": "12:35",
            "endTime": "18:28",
            "phase": "Project Phase Name",
            "startBreakTime": "11:35",
            "startTime": "9:28",
            "total": "8:00",
          },
        ],
        "total": "56:00",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <GaugeBar
          currentValue={480}
          referenceValue={480}
          verticalBar={true}
        />,
        <GaugeBar
          currentValue={0}
          referenceValue={480}
          verticalBar={true}
        />,
        <GaugeBar
          currentValue={480}
          referenceValue={480}
          verticalBar={true}
        />,
        <GaugeBar
          currentValue={480}
          referenceValue={480}
          verticalBar={true}
        />,
        <GaugeBar
          currentValue={480}
          referenceValue={480}
          verticalBar={true}
        />,
      ],
      "className": "week-graph",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "2018-02-12",
        "nodeType": "function",
        "props": Object {
          "currentValue": 480,
          "referenceValue": 480,
          "verticalBar": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2018-02-13",
        "nodeType": "function",
        "props": Object {
          "currentValue": 0,
          "referenceValue": 480,
          "verticalBar": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2018-02-14",
        "nodeType": "function",
        "props": Object {
          "currentValue": 480,
          "referenceValue": 480,
          "verticalBar": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2018-02-15",
        "nodeType": "function",
        "props": Object {
          "currentValue": 480,
          "referenceValue": 480,
          "verticalBar": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2018-02-16",
        "nodeType": "function",
        "props": Object {
          "currentValue": 480,
          "referenceValue": 480,
          "verticalBar": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <GaugeBar
            currentValue={480}
            referenceValue={480}
            verticalBar={true}
          />,
          <GaugeBar
            currentValue={0}
            referenceValue={480}
            verticalBar={true}
          />,
          <GaugeBar
            currentValue={480}
            referenceValue={480}
            verticalBar={true}
          />,
          <GaugeBar
            currentValue={480}
            referenceValue={480}
            verticalBar={true}
          />,
          <GaugeBar
            currentValue={480}
            referenceValue={480}
            verticalBar={true}
          />,
        ],
        "className": "week-graph",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "2018-02-12",
          "nodeType": "function",
          "props": Object {
            "currentValue": 480,
            "referenceValue": 480,
            "verticalBar": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2018-02-13",
          "nodeType": "function",
          "props": Object {
            "currentValue": 0,
            "referenceValue": 480,
            "verticalBar": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2018-02-14",
          "nodeType": "function",
          "props": Object {
            "currentValue": 480,
            "referenceValue": 480,
            "verticalBar": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2018-02-15",
          "nodeType": "function",
          "props": Object {
            "currentValue": 480,
            "referenceValue": 480,
            "verticalBar": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2018-02-16",
          "nodeType": "function",
          "props": Object {
            "currentValue": 480,
            "referenceValue": 480,
            "verticalBar": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`WeekGraph render should render nothing using min props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WeekGraph
    controlDate={Object {}}
    dailyContractedHours="8:00"
    storedTimes={
      Array [
        Object {},
        Object {},
        Object {},
        Object {},
      ]
    }
    weekEntries={
      Object {
        "timeEntries": null,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
